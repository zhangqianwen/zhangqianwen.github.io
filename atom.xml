<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cheven&#39;s Notes</title>
  <subtitle>进一寸有一寸的欢喜</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhangqianwen.github.io/"/>
  <updated>2017-07-01T10:01:23.640Z</updated>
  <id>https://zhangqianwen.github.io/</id>
  
  <author>
    <name>Cheven Zhang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Sort Algorithm</title>
    <link href="https://zhangqianwen.github.io/2017/07/01/SortAlgorithm/"/>
    <id>https://zhangqianwen.github.io/2017/07/01/SortAlgorithm/</id>
    <published>2017-07-01T02:06:20.000Z</published>
    <updated>2017-07-01T10:01:23.640Z</updated>
    
    <content type="html"><![CDATA[<p>##概述</p>
<p>排序算法按照是否使用使用外部存储分为两类：内部排序和外部排序。其中内部排序是数据记录在内存中进行排序，外部排序由于数据量较大超过内存到允许大小，因此在排序到过程中需要访问外存。</p>
<p><img src=".png" alt=""></p>
<p>对数据量较大到数据进行排序，应该考虑吧使用时间复杂度为O(nlog2n)的排序方法：<em>堆排序、快速排序以及归并排序</em>。</p>
<p><strong>快速排序</strong>是目前基于比较的内部排序算法中最好的。在待排序的关键字是随机分布时，这种排序算法的效率是最高的。</p>
<p>##1.插入排序-直接插入排序（Straight Insertion Sort）</p>
<p>###基本思想<br>将一个元素插入到一个有序元素序列中，得到一个长度+1的新的有序元素序列。即，将待排序序列的第一个元素看成一个有序的序列，从第二个元素开始依次插入，每次都要保证序列的有序。<br><img src="1.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##概述&lt;/p&gt;
&lt;p&gt;排序算法按照是否使用使用外部存储分为两类：内部排序和外部排序。其中内部排序是数据记录在内存中进行排序，外部排序由于数据量较大超过内存到允许大小，因此在排序到过程中需要访问外存。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;
    
    </summary>
    
    
  </entry>
  
</feed>
